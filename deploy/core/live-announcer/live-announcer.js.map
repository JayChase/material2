{"version":3,"file":"live-announcer.js","sourceRoot":"","sources":["../../src/demo-app/core/live-announcer/live-announcer.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAAA,qBAKO,eAAe,CAAC,CAAA;AAEV,oCAA4B,GAAI,IAAI,kBAAW,CAAC,wBAAwB,CAAC,CAAC;AAKvF;IAIE,yBAA8D,YAAqB;QACjF,IAAI,CAAC,YAAY,GAAG,YAAY,IAAI,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAChE,CAAC;IAED;;;OAGG;IACH,kCAAQ,GAAR,UAAS,OAAe,EAAE,UAAyC;QAAnE,iBAYC;QAZyB,0BAAyC,GAAzC,qBAAyC;QACjE,IAAI,CAAC,YAAY,CAAC,WAAW,GAAG,EAAE,CAAC;QAEnC,6EAA6E;QAC7E,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,WAAW,EAAE,UAAU,CAAC,CAAC;QAExD,iFAAiF;QACjF,wFAAwF;QACxF,2FAA2F;QAC3F,kEAAkE;QAClE,2CAA2C;QAC3C,UAAU,CAAC,cAAM,OAAA,KAAI,CAAC,YAAY,CAAC,WAAW,GAAG,OAAO,EAAvC,CAAuC,EAAE,GAAG,CAAC,CAAC;IACjE,CAAC;IAEO,4CAAkB,GAA1B;QACE,IAAI,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAE3C,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;QAC1C,MAAM,CAAC,YAAY,CAAC,aAAa,EAAE,MAAM,CAAC,CAAC;QAC3C,MAAM,CAAC,YAAY,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;QAE3C,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QAElC,MAAM,CAAC,MAAM,CAAC;IAChB,CAAC;IArCH;QAAC,iBAAU,EAAE;mBAKE,eAAQ,EAAE;mBAAE,aAAM,CAAC,oCAA4B,CAAC;;uBALlD;IAuCb,sBAAC;AAAD,CAAC,AAtCD,IAsCC;AAtCY,uBAAe,kBAsC3B,CAAA","sourcesContent":["import {\r\n  Injectable,\r\n  OpaqueToken,\r\n  Optional,\r\n  Inject\r\n} from '@angular/core';\r\n\r\nexport const LIVE_ANNOUNCER_ELEMENT_TOKEN  = new OpaqueToken('mdLiveAnnouncerElement');\r\n\r\nexport type AriaLivePoliteness = 'off' | 'polite' | 'assertive';\r\n\r\n@Injectable()\r\nexport class MdLiveAnnouncer {\r\n\r\n  private _liveElement: Element;\r\n\r\n  constructor(@Optional() @Inject(LIVE_ANNOUNCER_ELEMENT_TOKEN) elementToken: Element) {\r\n    this._liveElement = elementToken || this._createLiveElement();\r\n  }\r\n\r\n  /**\r\n   * @param message Message to be announced to the screenreader\r\n   * @param politeness The politeness of the announcer element.\r\n   */\r\n  announce(message: string, politeness: AriaLivePoliteness = 'polite'): void {\r\n    this._liveElement.textContent = '';\r\n\r\n    // TODO: ensure changing the politeness works on all environments we support.\r\n    this._liveElement.setAttribute('aria-live', politeness);\r\n\r\n    // This 100ms timeout is necessary for some browser + screen-reader combinations:\r\n    // - Both JAWS and NVDA over IE11 will not announce anything without a non-zero timeout.\r\n    // - With Chrome and IE11 with NVDA or JAWS, a repeated (identical) message won't be read a\r\n    //   second time without clearing and then using a non-zero delay.\r\n    // (using JAWS 17 at time of this writing).\r\n    setTimeout(() => this._liveElement.textContent = message, 100);\r\n  }\r\n\r\n  private _createLiveElement(): Element {\r\n    let liveEl = document.createElement('div');\r\n\r\n    liveEl.classList.add('md-live-announcer');\r\n    liveEl.setAttribute('aria-atomic', 'true');\r\n    liveEl.setAttribute('aria-live', 'polite');\r\n\r\n    document.body.appendChild(liveEl);\r\n\r\n    return liveEl;\r\n  }\r\n\r\n}\r\n"]}