{"version":3,"file":"list.js","sourceRoot":"","sources":["../../src/demo-app/components/list/list.ts"],"names":[],"mappings":"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","sourcesContent":["import {\r\n    Component,\r\n    ViewEncapsulation,\r\n    ContentChildren,\r\n    ContentChild,\r\n    QueryList,\r\n    Directive,\r\n    ElementRef,\r\n    Renderer,\r\n    AfterContentInit,\r\n} from '@angular/core';\r\n\r\n\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'md-list, md-nav-list',\r\n  host: {'role': 'list'},\r\n  template: '<ng-content></ng-content>',\r\n  styleUrls: ['list.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class MdList {}\r\n\r\n/* Need directive for a ContentChildren query in list-item */\r\n@Directive({ selector: '[md-line]' })\r\nexport class MdLine {}\r\n\r\n/* Need directive for a ContentChild query in list-item */\r\n@Directive({ selector: '[md-list-avatar]' })\r\nexport class MdListAvatar {}\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'md-list-item, a[md-list-item]',\r\n  host: {\r\n    'role': 'listitem',\r\n    '(focus)': 'handleFocus()',\r\n    '(blur)': 'handleBlur()',\r\n  },\r\n  templateUrl: 'list-item.html',\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class MdListItem implements AfterContentInit {\r\n  @ContentChildren(MdLine) _lines: QueryList<MdLine>;\r\n\r\n  /** @internal */\r\n  hasFocus: boolean = false;\r\n\r\n  /** TODO: internal */\r\n  ngAfterContentInit() {\r\n    this._setLineClass(this._lines.length);\r\n\r\n    this._lines.changes.subscribe(() => {\r\n      this._setLineClass(this._lines.length);\r\n    });\r\n  }\r\n\r\n  @ContentChild(MdListAvatar)\r\n  private set _hasAvatar(avatar: MdListAvatar) {\r\n    this._setClass('md-list-avatar', avatar != null);\r\n  }\r\n\r\n  constructor(private _renderer: Renderer, private _element: ElementRef) {}\r\n\r\n  /** @internal */\r\n  handleFocus() {\r\n    this.hasFocus = true;\r\n  }\r\n\r\n  /** @internal */\r\n  handleBlur() {\r\n    this.hasFocus = false;\r\n  }\r\n\r\n  private _setLineClass(count: number): void {\r\n    this._resetClasses();\r\n    if (count === 2 || count === 3) {\r\n      this._setClass(`md-${count}-line`, true);\r\n    }\r\n  }\r\n\r\n  private _resetClasses(): void {\r\n    this._setClass('md-2-line', false);\r\n    this._setClass('md-3-line', false);\r\n  }\r\n\r\n  private _setClass(className: string, bool: boolean): void {\r\n    this._renderer.setElementClass(this._element.nativeElement, className, bool);\r\n  }\r\n}\r\n\r\nexport const MD_LIST_DIRECTIVES = [MdList, MdListItem, MdLine, MdListAvatar];\r\n"]}